/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8 */

#ifndef PB_MESSAGE_PB_H_INCLUDED
#define PB_MESSAGE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _ServoUltrasonicData {
    float position_1; /* Position of the servo motor 1 in degrees */
    float position_2; /* Position of the servo motor 2 in degrees */
    float distance; /* Distance measured by the ultrasonic sensor */
} ServoUltrasonicData;

typedef struct _Status {
    bool lock_motors; /* Lock motors in place */
    bool fire_laser; /* Fire laser */
    bool motor_mode; /* True for scanning and False for manual */
} Status;

typedef struct _CombinedData {
    bool has_servo_data;
    ServoUltrasonicData servo_data; /* Embedded Servo and Ultrasonic Data */
    bool has_status;
    Status status; /* Embedded Status Data */
} CombinedData;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define ServoUltrasonicData_init_default         {0, 0, 0}
#define Status_init_default                      {0, 0, 0}
#define CombinedData_init_default                {false, ServoUltrasonicData_init_default, false, Status_init_default}
#define ServoUltrasonicData_init_zero            {0, 0, 0}
#define Status_init_zero                         {0, 0, 0}
#define CombinedData_init_zero                   {false, ServoUltrasonicData_init_zero, false, Status_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define ServoUltrasonicData_position_1_tag       1
#define ServoUltrasonicData_position_2_tag       2
#define ServoUltrasonicData_distance_tag         3
#define Status_lock_motors_tag                   1
#define Status_fire_laser_tag                    2
#define Status_motor_mode_tag                    3
#define CombinedData_servo_data_tag              1
#define CombinedData_status_tag                  2

/* Struct field encoding specification for nanopb */
#define ServoUltrasonicData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    position_1,        1) \
X(a, STATIC,   SINGULAR, FLOAT,    position_2,        2) \
X(a, STATIC,   SINGULAR, FLOAT,    distance,          3)
#define ServoUltrasonicData_CALLBACK NULL
#define ServoUltrasonicData_DEFAULT NULL

#define Status_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     lock_motors,       1) \
X(a, STATIC,   SINGULAR, BOOL,     fire_laser,        2) \
X(a, STATIC,   SINGULAR, BOOL,     motor_mode,        3)
#define Status_CALLBACK NULL
#define Status_DEFAULT NULL

#define CombinedData_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  servo_data,        1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  status,            2)
#define CombinedData_CALLBACK NULL
#define CombinedData_DEFAULT NULL
#define CombinedData_servo_data_MSGTYPE ServoUltrasonicData
#define CombinedData_status_MSGTYPE Status

extern const pb_msgdesc_t ServoUltrasonicData_msg;
extern const pb_msgdesc_t Status_msg;
extern const pb_msgdesc_t CombinedData_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define ServoUltrasonicData_fields &ServoUltrasonicData_msg
#define Status_fields &Status_msg
#define CombinedData_fields &CombinedData_msg

/* Maximum encoded size of messages (where known) */
#define CombinedData_size                        25
#define MESSAGE_PB_H_MAX_SIZE                    CombinedData_size
#define ServoUltrasonicData_size                 15
#define Status_size                              6

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
